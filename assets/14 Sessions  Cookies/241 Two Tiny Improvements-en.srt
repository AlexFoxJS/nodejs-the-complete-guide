1
00:00:02,110 --> 00:00:07,640
So we learned a lot about how we work with sessions and cookies and how we can use it to store data

2
00:00:07,670 --> 00:00:13,100
and what potential issues are if we store mongooses model data in there because we don't store to full

3
00:00:13,100 --> 00:00:17,890
mongoose model but only the data but not the magic Moffats.

4
00:00:17,960 --> 00:00:21,970
So we have to recreate that mongooses more than we have to really fetched data.

5
00:00:22,310 --> 00:00:29,510
Now one thing I just noticed is in the news if I go to my product detail there does add to cart of course

6
00:00:29,570 --> 00:00:35,030
all this should only be rendered if I am authenticated so I'll grab that link from product list and

7
00:00:35,100 --> 00:00:42,620
replace this year to make sure this works correctly because previously if I clicked on details even

8
00:00:42,620 --> 00:00:46,160
though I'm not locked in I did see my button there.

9
00:00:46,170 --> 00:00:55,560
Now if I log in and I go to the perhaps details I see it here I don't see it.

10
00:00:55,560 --> 00:00:57,700
If I'm locked out.

11
00:00:57,780 --> 00:01:06,490
Now one thing you might notice is if you do logon like this you sometimes might end up in a scenario

12
00:01:07,360 --> 00:01:12,220
where often logging in the view didn't update accordingly.

13
00:01:12,220 --> 00:01:18,220
Now I fail to reproducers at the moment but you might see this that you log in and still some items

14
00:01:18,220 --> 00:01:20,900
are missing and you need to reload the page to get there.

15
00:01:20,920 --> 00:01:27,010
The reason for this is that in off Chia's when I have post log in here I do set my session and when

16
00:01:27,010 --> 00:01:32,790
I then redirect when I send the response the session middleware goes ahead and creates that session.

17
00:01:32,830 --> 00:01:38,120
And that means that right said to Mongo DVH because we used to Mangu to be sessions store and it sets

18
00:01:38,130 --> 00:01:38,920
a cookie.

19
00:01:38,920 --> 00:01:44,260
Now the problem we can face here is writing data data to a database like what would it be.

20
00:01:44,260 --> 00:01:48,450
Can take a couple of milliseconds or depending on your speed even a bit more.

21
00:01:48,460 --> 00:01:49,990
Molly seconds.

22
00:01:49,990 --> 00:01:56,840
The redirect is fired in the pen and from that though so you might redirect too early.

23
00:01:56,890 --> 00:02:00,510
Now to be sure that your session has been set.

24
00:02:00,550 --> 00:02:04,330
You can use request session here and call the safe method.

25
00:02:04,360 --> 00:02:10,240
You normally don't need to do that but you need to do it in scenarios where you need to be sure that

26
00:02:10,240 --> 00:02:16,720
your session was created before you continue because you're you can pass in a function that will be

27
00:02:16,720 --> 00:02:17,330
called.

28
00:02:17,440 --> 00:02:21,010
Once you're done saving the session you'll get an error here.

29
00:02:21,100 --> 00:02:28,210
If an error exists most of the time that should not be the case and that in here you can safely redirect

30
00:02:28,330 --> 00:02:31,310
and you can be sure that your session has been created here.

31
00:02:32,150 --> 00:02:42,170
So now if that if I walk out and I log in again here now it will only continue once that session has

32
00:02:42,170 --> 00:02:43,200
really been created.

33
00:02:43,220 --> 00:02:49,070
Normally you don't need to call that but you need to call it if you need that guarantee which typically

34
00:02:49,070 --> 00:02:55,820
is the case when you do redirect for example because in such scenarios the redirect will be fired independent

35
00:02:55,820 --> 00:02:57,300
from the session being saved.

36
00:02:57,380 --> 00:03:02,660
And therefore the redirect might be finished and the new page might be rendered before your session

37
00:03:02,660 --> 00:03:05,610
was updated on the server and in the database.

38
00:03:05,720 --> 00:03:09,260
That's something to keep in mind and that is why I wanted to show you this method to.

