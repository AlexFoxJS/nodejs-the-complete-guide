1
00:00:02,190 --> 00:00:04,160
So well come back in case you skipped.

2
00:00:04,170 --> 00:00:07,910
You'll find these two age Tim files attached to this lecture.

3
00:00:07,980 --> 00:00:12,660
So make sure to download them and enter them insert them into your views folder.

4
00:00:12,660 --> 00:00:14,880
And now the goal is to serve them.

5
00:00:14,910 --> 00:00:17,510
We didn't work on the James Files and The Last Lecture.

6
00:00:17,520 --> 00:00:23,460
We just edit th html files and make sure to explore them to understand what they do in the end.

7
00:00:23,460 --> 00:00:28,890
We got the same content as before we just added an extra header and then at product we still have the

8
00:00:28,890 --> 00:00:35,430
forum in shop HTL we got some dummy code since we have no products to serve yet and now we want to serve

9
00:00:35,430 --> 00:00:37,770
DS H.T. mail files in my routes.

10
00:00:37,770 --> 00:00:39,690
Now how does that work.

11
00:00:39,960 --> 00:00:47,550
Let's start in the shop japes fall instead of sending some text or does H.T. email text here in this

12
00:00:47,550 --> 00:00:55,290
case let's instead send a file with send file and send file.

13
00:00:55,450 --> 00:00:58,550
Well allows us to just get sent back a file to the user.

14
00:00:58,590 --> 00:01:04,260
And as you see here in description it automatically sets to content timed response header field and

15
00:01:04,260 --> 00:01:06,760
we'll see if that works for us or not.

16
00:01:06,870 --> 00:01:09,420
So send file is a way to execute.

17
00:01:09,420 --> 00:01:13,310
And now we just need to point at that Fabi when I sent.

18
00:01:13,770 --> 00:01:20,400
Now here the question is how does the payoff look like the file is in the views folder.

19
00:01:20,400 --> 00:01:23,740
But how should this pov now look like.

20
00:01:24,120 --> 00:01:32,340
Well we could try using slash and assume that we see all of that from the view of the capture last fall

21
00:01:32,340 --> 00:01:35,880
which is an dnt the fall which starts our entire server.

22
00:01:35,880 --> 00:01:42,240
The fact that shop Chasse's subdirectory doesn't really matter because we export its functionality and

23
00:01:42,270 --> 00:01:45,800
imported into the aperture as which is in the root folder.

24
00:01:46,020 --> 00:01:53,820
So we could try using slash for the root Poth an absolute payoff scene from the root folder and then

25
00:01:53,990 --> 00:01:58,320
viewers and then shop h tim l like this.

26
00:01:58,440 --> 00:01:59,350
Let's give this a try.

27
00:01:59,370 --> 00:02:04,420
Let's save this go back to the page and reload localhost 3000 slash nothing.

28
00:02:04,920 --> 00:02:07,840
And I don't see that.

29
00:02:07,920 --> 00:02:12,240
Well the reason for it is this that this path is incorrect.

30
00:02:12,240 --> 00:02:14,420
Let's try dot slash here.

31
00:02:14,870 --> 00:02:20,190
If we now reload POV must be absolute is the error we get.

32
00:02:20,190 --> 00:02:22,770
So whatever we tried this doesn't seem to work.

33
00:02:22,770 --> 00:02:26,100
The reason for it is this that an absolute payoff would be correct.

34
00:02:26,190 --> 00:02:31,980
But slash like this actually refers to or root folder on our operating system.

35
00:02:32,040 --> 00:02:34,100
Not to this project folder.

36
00:02:34,410 --> 00:02:42,090
So in order to construct the path to dis directory and this file here ultimately we can use a feature

37
00:02:42,090 --> 00:02:43,800
provided by no chase.

38
00:02:43,830 --> 00:02:51,360
And now for core module we can import Rip-Off core module by requiring Poth like this.

39
00:02:51,540 --> 00:02:58,410
And then here we send a file where we create a path with the help of this module by calling the join

40
00:02:58,440 --> 00:02:59,230
method.

41
00:02:59,610 --> 00:03:08,730
Join yields us a payoff at the end it returns a payoff but it constructs this path by concatenating

42
00:03:08,820 --> 00:03:10,800
the different segments.

43
00:03:10,800 --> 00:03:18,040
Now the first second we should pass year is Dan actually a global variable made away lable by node.

44
00:03:18,060 --> 00:03:22,350
J.S. and that is the underscore underscore and that's important.

45
00:03:22,350 --> 00:03:23,960
These are two underscores.

46
00:03:24,000 --> 00:03:33,390
Dirty name does is a global variable which simply holds the absolute payoff on our operating system.

47
00:03:33,390 --> 00:03:42,090
Q This project folder and now we can add a comma and simply add viewas here because the first segment

48
00:03:42,090 --> 00:03:44,410
is basically the payoff to his whole project folder.

49
00:03:44,520 --> 00:03:50,760
The next segment is that we want to go into the use folder and then the first segment will be on file.

50
00:03:50,820 --> 00:03:56,500
So here shop that H-2 him out and don't add slashes here because and that's important.

51
00:03:56,640 --> 00:04:03,030
We use lbf join not because of the absolute path we could built it with their name and then concatenating

52
00:04:03,030 --> 00:04:04,250
this manually too.

53
00:04:04,680 --> 00:04:11,040
But we're using paff join because this will automatically build the path in a way that works on both

54
00:04:11,040 --> 00:04:18,600
Linux systems and Windows systems because as you might know on Linux systems you have pauvres like this

55
00:04:20,650 --> 00:04:27,010
and I'm not talking about possum to you or else but on your farm system now but on Windows you use backslashes

56
00:04:27,010 --> 00:04:32,570
for your paths and therefore if you manually constructor's slashes it would not run on Windows.

57
00:04:32,650 --> 00:04:37,960
And the other way around POF joint basically detects the operating system you're running on and that

58
00:04:37,990 --> 00:04:40,470
automatically builds a correct path.

59
00:04:40,480 --> 00:04:43,310
Now with that we could expect that it works.

60
00:04:43,330 --> 00:04:49,630
But actually their name here will point in this route's fuller right.

61
00:04:49,640 --> 00:04:55,600
Derham gives us the path to a file in which we use it and we're using it in the shop G-S fall in the

62
00:04:55,600 --> 00:04:56,680
route's folder.

63
00:04:56,680 --> 00:05:03,990
So this will point to the route's folder but the use is actually located in a sibling folder to routes.

64
00:05:04,030 --> 00:05:11,230
So what can we do regarding that now to solutionis that we add one or a segment in there and that is

65
00:05:11,260 --> 00:05:15,220
dot dot slash and this simply means go up one level.

66
00:05:15,280 --> 00:05:21,730
So this will now build upon where it first goes into the folder of these files are into routes.

67
00:05:21,730 --> 00:05:24,690
Then it goes up one level then into views.

68
00:05:24,700 --> 00:05:29,410
So if it's up 1 level it's in the root folder then into views and then it serves this.

69
00:05:29,450 --> 00:05:38,300
And with that if we now load localhost free thousands slash again we see that age Tim file being served

70
00:05:39,020 --> 00:05:44,540
and now is a great time for you to post a video and ensure that you'll serve at product.

71
00:05:44,540 --> 00:05:46,780
When does route's gets loaded.

72
00:05:48,280 --> 00:05:51,500
Where are you successful let's do it together.

73
00:05:51,500 --> 00:05:57,070
For this let's first of all import Poth module again the core module.

74
00:05:57,470 --> 00:06:00,710
So conc POV require lbf to pull data in.

75
00:06:00,740 --> 00:06:04,570
We don't need to install that because it is a core no chess module.

76
00:06:04,970 --> 00:06:14,120
And then here we don't use send but send file and we will then use POV join the name variable to get

77
00:06:14,180 --> 00:06:17,080
the payoff to disk files folder.

78
00:06:17,510 --> 00:06:23,010
And then we can go up one level and then into views.

79
00:06:23,030 --> 00:06:28,510
Whip's should be a string views and then we want to serve at Dasch product.

80
00:06:28,540 --> 00:06:41,180
H tim Alpha fall with this if we save that and we head over to add Dasch product stetch be Edmund slash

81
00:06:41,260 --> 00:06:42,110
at product.

82
00:06:42,140 --> 00:06:44,200
We see this page too.

83
00:06:44,240 --> 00:06:46,790
Now the styling is missing because we don't have any.

84
00:06:46,790 --> 00:06:53,630
But this works and we can all to check on add product that the correct content type was assigned by

85
00:06:53,630 --> 00:06:54,500
express.

86
00:06:54,560 --> 00:06:55,870
So does all the works.

87
00:06:55,880 --> 00:07:01,710
And now we see how we can serve simple H team l files for the different routes we have.

88
00:07:02,000 --> 00:07:07,070
Now here's one bonus task for you which I want you to solve and which will solve together in the next

89
00:07:07,070 --> 00:07:14,740
lecture at a New Age TMail file which is your page not found page which is denser.

90
00:07:14,930 --> 00:07:17,150
If we ever reach this middleware function.

