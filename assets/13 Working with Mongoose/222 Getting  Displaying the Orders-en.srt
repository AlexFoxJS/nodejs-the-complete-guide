1
00:00:02,130 --> 00:00:07,410
Let's move towards the end of the module by making sure that we can all get the dollars and display

2
00:00:07,410 --> 00:00:10,510
them on our orders page here.

3
00:00:10,590 --> 00:00:18,740
So for that we want to work in the shop controller with get orders and there I had to get orders function

4
00:00:18,830 --> 00:00:27,350
on my user model that we could call if we have a quick look at dysfunction get orders simply reached

5
00:00:27,350 --> 00:00:32,640
out to the orders collection and all orders for this user.

6
00:00:32,720 --> 00:00:38,760
While that shouldn't be too hard right because we can do of course is in our controller here.

7
00:00:39,140 --> 00:00:43,380
We know what a user ID because we got it here in our request object.

8
00:00:43,430 --> 00:00:48,380
So in the end what I can do is I can use my order model which we're importing at the top of the file

9
00:00:48,830 --> 00:00:56,390
and I can find all orders where and let's have a look at the order Maller real quick where a user user

10
00:00:56,390 --> 00:01:02,740
IDs or disinvested object to your design on s that key is equal to the user id of the locked end user.

11
00:01:02,750 --> 00:01:12,290
So here we have user Daut user ID that just be equal to request user underscore ID that is to check.

12
00:01:12,290 --> 00:01:16,270
I want to Meggan This will give me all orders that belong to that user.

13
00:01:16,730 --> 00:01:21,540
Well and then we can just use these orders here in the van Methot.

14
00:01:22,010 --> 00:01:27,290
So essentially I can just reuse my old then method where I already expect that the order is and it can

15
00:01:27,290 --> 00:01:32,360
render the orders page if we now save that we just need to make sure the route exists.

16
00:01:32,360 --> 00:01:38,620
So let's quickly common data in the here and now have a click on orders.

17
00:01:38,740 --> 00:01:42,450
I get an error because the structure of our data changed a little bit.

18
00:01:42,490 --> 00:01:46,180
So we need to work on the view to adjust it to our data.

19
00:01:46,420 --> 00:01:54,110
In my orders page here how did change we loob fruity orders and each order has an ID that will still

20
00:01:54,110 --> 00:01:54,760
work.

21
00:01:55,100 --> 00:01:57,240
But then we have no order items anymore.

22
00:01:57,290 --> 00:02:03,620
We've got order products now we can confirm this with our schema or in comp as of course we got order

23
00:02:03,620 --> 00:02:10,220
products and each product has quantity and then the product data in a product field.

24
00:02:10,250 --> 00:02:16,790
So inside of here we have the product and there we have a nested product field.

25
00:02:16,790 --> 00:02:20,600
So we could all name this just P to avoid confusion.

26
00:02:20,600 --> 00:02:21,550
This will be.

27
00:02:21,640 --> 00:02:27,220
And there we have the product field with the title but directly on the top level object.

28
00:02:27,350 --> 00:02:32,440
So directly in the object that is stored in that product's array we have to quantity.

29
00:02:32,480 --> 00:02:38,690
So we can still access this directly on PPI which is the part directly in order products but then the

30
00:02:38,690 --> 00:02:43,580
product data itself is nested in one additional Ampad document product.

31
00:02:43,580 --> 00:02:44,800
But with these changes.

32
00:02:44,810 --> 00:02:48,380
Q Are you final reload that view page.

33
00:02:48,380 --> 00:02:49,250
Does looks good.

34
00:02:49,250 --> 00:02:53,480
Now I see all my orders here as we did before.

35
00:02:53,570 --> 00:02:56,330
Now something is wrong about the first two orders.

36
00:02:56,450 --> 00:03:01,610
And the thing that is wrong is that simply these orders were created at a time where we only store the

37
00:03:01,610 --> 00:03:04,120
object ID and no special object data.

38
00:03:04,220 --> 00:03:10,580
So let me click quickly delete these two orders here so that we don't have them in our view.

39
00:03:10,610 --> 00:03:11,980
And in our app anymore.

40
00:03:12,020 --> 00:03:14,580
So now we only have valid orders here.

41
00:03:14,750 --> 00:03:17,000
So this does now all work.

42
00:03:17,000 --> 00:03:18,950
Feel free to play around with that.

43
00:03:18,950 --> 00:03:22,760
Try adding totals for the orders or anything like that.

44
00:03:22,910 --> 00:03:25,310
For now this is the state I want to work with.

45
00:03:25,310 --> 00:03:31,130
I want to continue with and dessous what I want it to show you with mongooses and Langone be and you

46
00:03:31,130 --> 00:03:37,670
there for now saw a lot of different alternatives for working with databases and how to work with the

47
00:03:37,670 --> 00:03:38,600
data then.

