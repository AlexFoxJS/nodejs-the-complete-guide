1
00:00:02,110 --> 00:00:09,130
So I still want to have a function which I can call to connect and therefore this function still is

2
00:00:09,130 --> 00:00:11,430
looking good to me in general.

3
00:00:11,440 --> 00:00:18,240
One thing I want to do is I'll add a fro error here today all of the error again when we fail here.

4
00:00:18,520 --> 00:00:23,650
But besides that I'm happy with having bought Mongo connect here but I'll change something I'll not

5
00:00:23,660 --> 00:00:27,060
return to client in my callback here.

6
00:00:27,130 --> 00:00:33,010
Instead I'll add a variable underscore D-B the underscore is only here to signal that this will only

7
00:00:33,010 --> 00:00:34,900
be used internally in this file.

8
00:00:34,960 --> 00:00:36,460
But you don't have to name it like this.

9
00:00:36,460 --> 00:00:39,070
You could also have normally just the DBI.

10
00:00:39,550 --> 00:00:42,070
And initially this will be undefined.

11
00:00:42,130 --> 00:00:46,440
Now here in the van block I will store a value in there.

12
00:00:46,660 --> 00:00:55,660
I will store access to the database here and if I leave it like this what we will do is we will connect

13
00:00:55,660 --> 00:01:01,570
to the test database by default because that is what we specify here in our connection string so will

14
00:01:01,570 --> 00:01:06,850
connect to shop here and then this will give us access to the shop database to which we automatically

15
00:01:06,850 --> 00:01:10,540
connect and you could also enter the database name here.

16
00:01:10,780 --> 00:01:15,670
To override this and connect to a different database then you were connected to initially but I'll not

17
00:01:15,670 --> 00:01:19,880
enter anything and just connect to that database as a side note.

18
00:01:19,990 --> 00:01:27,010
Unlike in sequel we never need to create that database or add the tables to collections in there ahead

19
00:01:27,010 --> 00:01:34,660
of time it will be created on the fly when we first access it which is again fitting that flexibility

20
00:01:34,780 --> 00:01:40,780
the long way to be gives us in sequel we had to prepare everything in advance at least when not using

21
00:01:40,780 --> 00:01:45,210
sequel eyes which also had to do that but it did it for us here.

22
00:01:45,340 --> 00:01:50,390
We don't need to do anything we're just telling Mom would he be hey connect me to the shop database.

23
00:01:50,470 --> 00:01:55,510
And if that database doesn't exist yet more would he be able to create it as soon as we start writing

24
00:01:55,510 --> 00:01:56,410
data to it.

25
00:01:56,680 --> 00:01:59,010
So that's just a little side note here.

26
00:01:59,020 --> 00:02:08,550
I do store a connection to my database in the DB variable and with that store it now in my callback.

27
00:02:08,560 --> 00:02:18,360
I don't need to return it but I will add another function to your own name that gets D-B and here I

28
00:02:18,360 --> 00:02:27,420
will simply check if DBI is set so if it's not undefined and in this case I'll return DB So it will

29
00:02:27,420 --> 00:02:29,970
return access to my database.

30
00:02:30,000 --> 00:02:32,560
Otherwise all essentially not do anything here.

31
00:02:32,640 --> 00:02:34,180
So I'll return on the find.

32
00:02:34,290 --> 00:02:37,360
We could all have fro and error.

33
00:02:37,490 --> 00:02:39,190
No database.

34
00:02:39,620 --> 00:02:41,270
Found something like this.

35
00:02:43,030 --> 00:02:49,690
Now here I also want to export that's all not just export Mongo connect but instead I'll just use a

36
00:02:49,690 --> 00:02:52,380
different syntax you learn about exports.

37
00:02:52,540 --> 00:03:01,570
Connect equals Mongo connect and I'll also have exports get D-B which equals get D.B like this.

38
00:03:01,580 --> 00:03:06,700
So now I'm exporting two methods one for connecting and then storing the connection to the database

39
00:03:07,060 --> 00:03:12,520
and therefore this will keep on running and I have one method where I return access to that connect

40
00:03:12,520 --> 00:03:16,200
the database if it exists and mon would be behind the scenes.

41
00:03:16,200 --> 00:03:21,910
We'll even managed this very elegantly with something called connection pooling where would he be will

42
00:03:21,910 --> 00:03:28,550
make sure it provides sufficient connections for multiple simultaneous interactions with the database.

43
00:03:28,570 --> 00:03:31,430
So this is really a good pattern we should follow.

44
00:03:31,540 --> 00:03:34,790
Now with that changed we still can't connect.

45
00:03:34,840 --> 00:03:38,940
One thing I need to adjust though is in the aperture as file where I do connect.

46
00:03:39,070 --> 00:03:43,060
I'll not get declined anymore because we don't return it in the callback anymore.

47
00:03:43,090 --> 00:03:45,230
So now we just know we are connected.

48
00:03:45,310 --> 00:03:47,130
But there is nothing else we can do.

49
00:03:47,320 --> 00:03:53,240
But one thing I won't be able to do is in product JS where I create my product model there.

50
00:03:53,260 --> 00:04:00,660
I don't just can't connect the connection now but I can import get D-B and that of course is very useful

51
00:04:00,700 --> 00:04:07,630
because that means I had to import this by access and get to be here because this means that I now can

52
00:04:07,630 --> 00:04:13,720
call this function to get access to my database and therefore I can use it to well interact with the

53
00:04:13,720 --> 00:04:14,830
database.

54
00:04:14,830 --> 00:04:18,620
Now let's use that database connection starting in the next lecture.

