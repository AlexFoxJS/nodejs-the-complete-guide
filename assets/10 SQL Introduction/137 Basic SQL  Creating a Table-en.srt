1
00:00:02,530 --> 00:00:09,490
So let's finish that set up off the Products table which I need for my first demo code here in the table

2
00:00:09,550 --> 00:00:16,280
editor so to say in the book bench we can define how a product's entry should look like.

3
00:00:16,300 --> 00:00:21,820
For that we first of all define the name of a field ID and the data type.

4
00:00:21,820 --> 00:00:24,570
And for the ID an integer is fine.

5
00:00:24,780 --> 00:00:30,070
You can also check that it should be the primary key by which records in this table will be identified

6
00:00:30,580 --> 00:00:34,470
that it must not be null that it should be unique.

7
00:00:34,480 --> 00:00:40,690
That should definitely be the case if it should hold binary data which is not the case if it's unsigned

8
00:00:40,700 --> 00:00:45,760
so if it holds no negative values which should also be the case because that would be an integer starting

9
00:00:45,760 --> 00:00:49,040
at 1 and then incrementing here.

10
00:00:49,330 --> 00:00:55,960
If it is zero fill and for us important if it's auto incrementing and that should be the case because

11
00:00:55,990 --> 00:00:58,710
every new record should receive that automatically.

12
00:00:58,780 --> 00:01:02,640
And it should be a higher number than in the last record.

13
00:01:02,680 --> 00:01:10,020
Now a product also typically has a title and they're all use of our char which is basically a string.

14
00:01:10,090 --> 00:01:16,210
I'll just find that it may be up to 255 characters long and longer titles will simply be cut off.

15
00:01:16,210 --> 00:01:18,100
So that's something to keep in mind.

16
00:01:18,130 --> 00:01:19,830
It must also not be null.

17
00:01:19,870 --> 00:01:25,750
So we have to have a value in there but I don't need any other setting here for a product.

18
00:01:25,750 --> 00:01:27,520
I also want to have a price.

19
00:01:27,700 --> 00:01:33,520
And here I want to have a double so that we can enter decimal places.

20
00:01:33,520 --> 00:01:35,590
This must also not be now.

21
00:01:35,950 --> 00:01:40,720
I also want to have a description which now will not be a bar chart.

22
00:01:40,780 --> 00:01:47,430
Bad will be text and if you're wondering which data types are available that is exactly what I meant.

23
00:01:47,530 --> 00:01:55,360
You should definitely consult a full sequel of course to learn more about the A-Whale data types and

24
00:01:55,360 --> 00:01:56,800
how to work with them.

25
00:01:56,800 --> 00:02:03,760
So here I got my text which is simply a longer text than the chart which has a limitation.

26
00:02:03,760 --> 00:02:10,990
And I will have an image you are l which are also set to Warszawa 255 which means longer you Your else

27
00:02:11,270 --> 00:02:13,810
also won't work with that.

28
00:02:13,810 --> 00:02:16,220
I did find how their product should look like.

29
00:02:16,450 --> 00:02:22,200
You can leave everything out as it is and then on the bottom right again click on apply here.

30
00:02:22,420 --> 00:02:24,130
It shows you the sequel statement.

31
00:02:24,130 --> 00:02:28,930
It will execute and you could execute this on your own for example in note of course to all of this

32
00:02:28,930 --> 00:02:31,770
create this new table here will do in the Workbench.

33
00:02:31,810 --> 00:02:39,040
So click Apply close and now on tables you see the new products table and if you click this I can hear

34
00:02:39,130 --> 00:02:42,490
on the very right you can see the entries in there.

35
00:02:42,490 --> 00:02:47,250
By the way you also see the sequel of Corey that was executed to look into that.

36
00:02:47,440 --> 00:02:50,900
And that's pretty similar to the query we're executing here.

37
00:02:52,040 --> 00:02:58,370
So now that the table is set up we just need to enter one dummy data so that we have something to fetch

38
00:02:58,790 --> 00:03:01,180
and I will simply add a book here.

39
00:03:01,930 --> 00:03:06,730
Ribs with a price of let's say 12 9 9 description.

40
00:03:07,060 --> 00:03:13,160
This is an awesome book and also an image you are l.

41
00:03:13,270 --> 00:03:19,030
Now if you've got problems copying a value and you're simply have to type it manually copying all that

42
00:03:19,030 --> 00:03:20,110
didn't work for me.

43
00:03:20,110 --> 00:03:24,910
Of course you can also enter some dummy value and just live with no image being displayed.

44
00:03:24,910 --> 00:03:29,170
Now let's all enter IDs here though that should be generated if you don't do it.

45
00:03:29,170 --> 00:03:30,700
Click on apply on the bottom right.

46
00:03:30,730 --> 00:03:31,540
Apply here.

47
00:03:31,550 --> 00:03:33,670
Close and now you again click on this.

48
00:03:33,670 --> 00:03:37,390
I can hear next to products end the left column.

49
00:03:37,450 --> 00:03:40,970
You'll see that now does one element was added here.

50
00:03:41,110 --> 00:03:42,690
Now do we get a book in here.

51
00:03:42,760 --> 00:03:49,180
Let's go back to our note code and there we can now change then and now this is something provided by

52
00:03:49,180 --> 00:03:53,800
the fact that we're using promis year when exporting the pool.

53
00:03:53,980 --> 00:04:01,000
We now get back promises when executing queries like this with execute and promises have two functions

54
00:04:01,150 --> 00:04:05,520
then and catch Let's explore them in the next lecture.

