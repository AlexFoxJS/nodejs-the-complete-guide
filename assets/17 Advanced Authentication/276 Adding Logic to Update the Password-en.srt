1
00:00:02,170 --> 00:00:08,830
We added a page that allows us to enter a new password the new password due here and there we will send

2
00:00:08,830 --> 00:00:11,590
a POST request to slash new password.

3
00:00:11,590 --> 00:00:17,710
Now we need to add that route and controller action as a next step so that the existing user password

4
00:00:17,830 --> 00:00:20,110
can be replaced with the new one.

5
00:00:20,110 --> 00:00:25,170
So back to the off controller let's add a new controller action.

6
00:00:25,250 --> 00:00:32,190
The post new password action and you guessed it which arguments we have in that function here.

7
00:00:33,220 --> 00:00:35,880
And then enter here what do we need to do.

8
00:00:36,250 --> 00:00:44,290
Well we need to extract the new password from request body password and that is request bawdy password

9
00:00:44,350 --> 00:00:52,000
because the new password view I'm storing the password in a field named password and will need to extract

10
00:00:52,000 --> 00:01:00,850
that user ID or two so that user ID is also something user ID is equal to request bawdy user ID.

11
00:01:00,870 --> 00:01:03,100
We need that as well.

12
00:01:03,130 --> 00:01:09,400
I also still want to have that token because otherwise people could start entering random tokens here

13
00:01:09,430 --> 00:01:15,550
and still reach that page and then maybe change users on the back and by entering random user IDs and

14
00:01:15,550 --> 00:01:17,670
that hidden input field as well.

15
00:01:17,680 --> 00:01:25,690
So I want to have that token and therefore you password also add a neighborhood input field password

16
00:01:26,230 --> 00:01:30,890
token an output password token here.

17
00:01:31,090 --> 00:01:35,320
So that is a Number field and I need to pass that token into my view.

18
00:01:35,350 --> 00:01:39,380
So that is something for get a new password for this action here.

19
00:01:39,550 --> 00:01:47,590
I need to pass password token as a variable into the view and it will hold the token I'm extracting

20
00:01:47,590 --> 00:01:51,450
from the U R L here and that is the token we originally generated.

21
00:01:51,460 --> 00:02:00,320
So this is now all the past and this is not also something I can extract here the password token request

22
00:02:00,330 --> 00:02:08,040
bawdy password token extract that from that password token field here.

23
00:02:08,040 --> 00:02:12,090
OK so now we got these three pieces of information in here.

24
00:02:12,120 --> 00:02:19,300
Now I want to reset my user so I will again find one user in my database and I'll find the user.

25
00:02:19,410 --> 00:02:20,210
Where do we set.

26
00:02:20,220 --> 00:02:31,630
Token is equal to the password token where the reset token expiration is again greater than dates now.

27
00:02:31,810 --> 00:02:41,610
So the same logic as I did up here and where d id is equal to my user ID.

28
00:02:41,890 --> 00:02:49,420
I'll then again add then and catch log any errors we might be facing here.

29
00:02:49,720 --> 00:02:55,330
And then I'll have my user that fulfills all these criteria.

30
00:02:55,870 --> 00:03:01,520
And then here I want to assign a new password to the user.

31
00:03:01,530 --> 00:03:05,310
Now obviously for that I'll again hash it because that doesn't change.

32
00:03:05,340 --> 00:03:07,010
It still should be hashed.

33
00:03:07,320 --> 00:03:19,120
So I'll again use the script hash pass in the new password and my number off salting rounds twelth and

34
00:03:19,120 --> 00:03:28,660
I will return this year and then add another then block the hashed password where I can stored it on

35
00:03:28,660 --> 00:03:30,170
the extracted user.

36
00:03:30,310 --> 00:03:36,730
However the user is an argument in this function but I need it here to be able to access it in this

37
00:03:36,730 --> 00:03:38,120
function as well.

38
00:03:38,140 --> 00:03:50,070
I will create a new variable up there user or reset user end a will store user in reset user so in that

39
00:03:50,070 --> 00:03:54,090
variable because that variable is defined in disfunctions scope.

40
00:03:54,180 --> 00:03:56,980
So I can use it in this and in this function.

41
00:03:57,120 --> 00:03:59,950
And now I can use reset user in here too.

42
00:04:00,090 --> 00:04:05,660
And I can use it to call resets user and set the password equal to the new Hash password.

43
00:04:06,920 --> 00:04:14,590
And for the Reset user I will also set reset token equal to now.

44
00:04:14,720 --> 00:04:22,410
And I will also set reset target expiration to null here or not to now set it to undefined.

45
00:04:22,640 --> 00:04:25,880
So these fields here are not required anymore.

46
00:04:25,880 --> 00:04:27,840
They don't need to store any values anymore.

47
00:04:28,100 --> 00:04:34,830
Once I'm done I can call save here and return that in here.

48
00:04:34,890 --> 00:04:38,070
I'll then have my result of that save operation.

49
00:04:38,180 --> 00:04:46,790
And once he did save I can now redirect the user back to the log in page with that new password.

50
00:04:46,790 --> 00:04:50,770
You could also send the number email confirming that reset if you wanted to.

51
00:04:50,930 --> 00:04:52,140
And now she is saved.

52
00:04:53,590 --> 00:04:56,370
Let's reload that password resetting page here.

53
00:04:57,880 --> 00:05:03,760
And let's add a new entry and you password click Update password and I get a page not found which makes

54
00:05:03,760 --> 00:05:07,900
sense obviously because I have when you post route but I need to register it as a route.

55
00:05:07,930 --> 00:05:11,260
I have my action or I should say I need to register it as a route.

56
00:05:11,290 --> 00:05:21,160
So in the off G-S file here we need to add a new post request to new password and execute off controller

57
00:05:21,280 --> 00:05:23,210
post-New password there.

58
00:05:23,450 --> 00:05:24,300
That is important.

59
00:05:24,370 --> 00:05:26,060
Safe that.

60
00:05:26,270 --> 00:05:33,280
Then simply go back to the page where you have that token in the U R L enter your password.

61
00:05:33,290 --> 00:05:40,630
Let's also quickly reload our users collection before we have safe and kind of memorize de-value here.

62
00:05:40,640 --> 00:05:49,000
It ends with x y w y and click Update password I'm on the logon page.

63
00:05:49,250 --> 00:05:56,750
And now if I reload my users collection that password here should change and it doesn't allow get a

64
00:05:56,750 --> 00:05:59,070
reset token on it's gone.

65
00:05:59,090 --> 00:06:00,960
I also have no error here.

66
00:06:01,040 --> 00:06:04,500
So it looks like password resetting was successful.

67
00:06:04,520 --> 00:06:08,450
We successfully assigned a new password.

68
00:06:08,480 --> 00:06:19,550
Now if we try going to reset with some random token then this will not work and we're not doing proper

69
00:06:19,550 --> 00:06:20,490
error handling there.

70
00:06:20,510 --> 00:06:24,920
I'll have a whole module in that because we essentially failed to find a user for that token.

71
00:06:24,920 --> 00:06:25,970
So this all works.

72
00:06:26,030 --> 00:06:30,890
We can start changing values of random tokens off of random users.

73
00:06:30,890 --> 00:06:32,690
So this will not require.

