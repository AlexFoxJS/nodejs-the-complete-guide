1
00:00:02,300 --> 00:00:09,170
So it's now time to introduce more models and it will introduce a brand new mall before I start working

2
00:00:09,170 --> 00:00:10,440
on the card again.

3
00:00:10,580 --> 00:00:13,030
That new model will be my user model.

4
00:00:13,070 --> 00:00:20,240
For now we have no real authentication process will only work with one dummy user who doesn't really

5
00:00:20,240 --> 00:00:21,480
have to log in.

6
00:00:21,530 --> 00:00:27,290
All indication will follow later in the course but I still want to show you how you could have a user

7
00:00:27,500 --> 00:00:33,200
who did create a product and who therefore is connected to that product and at the same time a user

8
00:00:33,200 --> 00:00:37,030
should own a card and that card will hold multiple products.

9
00:00:37,160 --> 00:00:40,600
And this is how we can then overall connect everything.

10
00:00:40,610 --> 00:00:46,970
So as a user just fall in the models folder and in there first of all let's define the user model.

11
00:00:47,170 --> 00:00:49,790
And this is also something you can try on your own.

12
00:00:49,790 --> 00:00:55,190
Try to define a sequel ice model with a user that has an ID.

13
00:00:55,220 --> 00:01:00,100
The idea should have the same function as it has for the product model.

14
00:01:00,200 --> 00:01:04,170
And let's say for now a user also has a name and an email.

15
00:01:04,490 --> 00:01:09,500
Definitely try this on your own possed a video at this point will thereafter to find the user model

16
00:01:09,500 --> 00:01:10,550
together.

17
00:01:13,140 --> 00:01:14,350
Where are you successful.

18
00:01:14,670 --> 00:01:16,710
Let's define the user model.

19
00:01:16,830 --> 00:01:25,370
But first of all requiring the sequel sequels constructor or KLOS and then also with lowercase s let's

20
00:01:25,390 --> 00:01:34,200
import our own sequel eyes object which holds the connections on from the utl folder and their database

21
00:01:34,200 --> 00:01:35,100
file.

22
00:01:35,610 --> 00:01:43,320
We can then define a user and store the user in a user constant by calling sequel's define a name the

23
00:01:43,320 --> 00:01:45,130
model user like this.

24
00:01:45,360 --> 00:01:48,860
And then as an object you define the structure of the user.

25
00:01:49,050 --> 00:01:54,540
I want to have an idea for my user and to type your will be sequel eyes

26
00:01:57,240 --> 00:01:58,960
integer.

27
00:01:59,130 --> 00:02:07,650
It should be or incrementing I don't allow null values and this will be my primary key.

28
00:02:08,790 --> 00:02:15,540
Besides that Id also have a name and here I'll use a very short definition where they say that the name

29
00:02:15,810 --> 00:02:21,940
will be a string and the email here will also be a string.

30
00:02:23,290 --> 00:02:24,410
So this is my user.

31
00:02:24,490 --> 00:02:31,110
Now we need to export this model with Module exports user like dat.

32
00:02:31,390 --> 00:02:35,050
And now with that being exported we can start using it.

33
00:02:35,080 --> 00:02:40,650
And one thing I want to start using it for is that I want to create an association.

34
00:02:40,780 --> 00:02:46,390
Now lets have a look at how we do that and what an association actually is in the next lecture.

