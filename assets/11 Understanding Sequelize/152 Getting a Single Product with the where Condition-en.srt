1
00:00:02,170 --> 00:00:05,140
Time to retrieve a single book when we click on details.

2
00:00:05,170 --> 00:00:10,720
So essentially I'm talking about the get product action here in my controller.

3
00:00:10,720 --> 00:00:12,220
We get the product that year.

4
00:00:12,550 --> 00:00:17,470
And indeed this is the old find by the method I defined.

5
00:00:17,470 --> 00:00:24,980
But if we were to delete that we see that sequel is also has a fine by the method.

6
00:00:25,000 --> 00:00:31,750
So actually if a leaf does code exactly as it is right here at least it will work one differences dead

7
00:00:31,810 --> 00:00:32,980
with sequel lies.

8
00:00:33,010 --> 00:00:35,890
We don't get an array of products here.

9
00:00:36,010 --> 00:00:40,980
Instead I get a single product so I can just use it like dis.

10
00:00:40,990 --> 00:00:46,720
So with these tiny changes turning into a single product and using it as such and leaving this as it

11
00:00:46,720 --> 00:00:55,330
is actually I should already be able to view the details and I am just the image just may be a bit oversized

12
00:00:55,330 --> 00:00:56,270
here.

13
00:00:56,360 --> 00:00:59,450
That is something we can quickly fix in C S S.

14
00:00:59,710 --> 00:01:06,160
I quickly added the image class to the day of wrapping my product in the product detail view here and

15
00:01:06,160 --> 00:01:11,830
now in the main Zia's s fall re old af my centered class.

16
00:01:11,970 --> 00:01:22,850
I will add a new image class and restrict the max height to let's say 20 REM and then also say that

17
00:01:22,940 --> 00:01:31,550
any image text in the nested in an element with the image class should respect that height and that

18
00:01:31,560 --> 00:01:34,970
should also be just height not max height.

19
00:01:35,230 --> 00:01:37,400
That final reloaders page here.

20
00:01:37,410 --> 00:01:42,580
This is looking better and we should have no problems with the image any more.

21
00:01:42,960 --> 00:01:47,790
Just a tiny change to main takeaway of course is we can retrieve a product like this.

22
00:01:47,790 --> 00:01:52,310
However I also want to show you an alternative way.

23
00:01:52,490 --> 00:01:59,780
So using disinfects here is perfectly fine but let me also show you how we can use the normal find method.

24
00:01:59,780 --> 00:02:03,680
We also got find all to be precise.

25
00:02:03,920 --> 00:02:08,570
We only have one product with that idea of course but I want to show you that where syntax.

26
00:02:08,570 --> 00:02:10,560
So any object we can pass to find all.

27
00:02:10,600 --> 00:02:12,090
All set to where a key.

28
00:02:12,320 --> 00:02:15,500
And there you got a rich query language.

29
00:02:15,500 --> 00:02:19,840
Or were it a rich amount of options you can use to configure this.

30
00:02:19,970 --> 00:02:23,300
More a can of course be found in the official tutorial.

31
00:02:23,300 --> 00:02:28,590
If you go to querying dare There you'll find all the details about how to configure your queries.

32
00:02:28,610 --> 00:02:32,030
For example you can also control which attributes are retrieved.

33
00:02:32,030 --> 00:02:34,560
You don't have to get all attributes all the time.

34
00:02:34,640 --> 00:02:40,700
If you only need to title you can find us too and you'll see how to use where how to use in a basic

35
00:02:40,700 --> 00:02:46,490
form where you want to simply check that one attribute has one exact value but also how you can use

36
00:02:46,790 --> 00:02:53,660
operators to have alternative conditions or to check if something is greater than or greater than equal

37
00:02:54,350 --> 00:02:57,400
or lower than a value and so on.

38
00:02:57,410 --> 00:03:01,140
So you got a lot of options out there and definitely check out the stocks.

39
00:03:01,280 --> 00:03:08,750
Here we could say I'm looking for all products where the ID is equal to prod ID and then I will use

40
00:03:08,750 --> 00:03:11,560
them or catch any errors.

41
00:03:11,840 --> 00:03:15,140
Now the one important thing here of course is by default.

42
00:03:15,200 --> 00:03:21,470
This gives us an array because even though we know that only one product will have his idea find all

43
00:03:21,590 --> 00:03:27,730
per definition always gives you multiple items even if it's an array with only one element.

44
00:03:27,770 --> 00:03:34,590
So if we use this syntax and we render this we'll have products and we're interested in the first product.

45
00:03:34,640 --> 00:03:37,330
In this case also the only product as we know.

46
00:03:37,460 --> 00:03:43,880
So now I can comment out the other approach and if we save that and we go back to our application and

47
00:03:43,880 --> 00:03:49,220
we reload that detail page it looks like it works but actually just keeps on loading.

48
00:03:49,220 --> 00:03:52,090
So something went wrong and it did.

49
00:03:52,190 --> 00:03:53,770
We got an error here.

50
00:03:55,610 --> 00:03:57,730
Product is not defined yet.

51
00:03:57,850 --> 00:04:02,110
Here for the title I should all use products sideroad of course.

52
00:04:02,210 --> 00:04:08,870
So now that if we save dead and let it restart therefore now we can reload this page and it works as

53
00:04:08,870 --> 00:04:15,590
before but now is using find where and find all with that where query and I simply wanted to show you

54
00:04:15,590 --> 00:04:17,300
this alternative approach.

55
00:04:17,300 --> 00:04:22,490
Of course it's perfectly fine and even preferrable in this case to use find by ID.

56
00:04:22,700 --> 00:04:26,480
So I will actually switch back to that Alber approach.

57
00:04:26,480 --> 00:04:28,370
It's good to know how you can query though.

