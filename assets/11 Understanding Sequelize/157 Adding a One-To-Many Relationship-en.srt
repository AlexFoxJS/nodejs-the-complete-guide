1
00:00:02,260 --> 00:00:10,540
What do I mean by association you could also say relation let's say in our project and that is basically

2
00:00:10,540 --> 00:00:11,040
our project.

3
00:00:11,050 --> 00:00:15,140
We have products users cards and at some point also orders.

4
00:00:15,430 --> 00:00:21,850
Now if we want to connect all these things on and define how they work together then a product would

5
00:00:21,910 --> 00:00:27,070
probably belong to many carts because our users will have carts.

6
00:00:27,070 --> 00:00:32,740
Therefore we have multiple users multiple cards and they have for product can belong to many carts because

7
00:00:32,740 --> 00:00:36,350
of course different users can add the same product to their carts.

8
00:00:36,640 --> 00:00:38,960
Each user only has one card though.

9
00:00:39,250 --> 00:00:42,440
So this is how we could relate that product.

10
00:00:42,460 --> 00:00:49,690
Also can be part of multiple orders and the user can have multiple orders because you get order more

11
00:00:49,690 --> 00:00:53,870
than one thing a user can also own multiple products.

12
00:00:53,890 --> 00:01:00,170
In a sense all of this user created this product so not own it in the sense of I bought it.

13
00:01:00,250 --> 00:01:06,670
But in the sense of Hey I offered this product I created it in the shop.

14
00:01:06,740 --> 00:01:12,380
This is a rough outline of how we can communicate or relate different models.

15
00:01:12,590 --> 00:01:20,200
And this is what we can also reflect in sequel eyes there I'll go to my app js file here.

16
00:01:20,330 --> 00:01:21,800
That's close to views.

17
00:01:21,800 --> 00:01:31,250
I'll go to my Applegate's file and before I sync all my data to the database I want to define my models.

18
00:01:31,250 --> 00:01:38,900
So for this I will add more imports and I will import my product model by requiring this from the models

19
00:01:38,900 --> 00:01:45,740
file and they're the product file at Amal's folder and the product file Andal import my user model from

20
00:01:45,740 --> 00:01:52,100
the user following the models folder with the two models imported we can relate them and I will relate

21
00:01:52,100 --> 00:01:55,370
them here in the same place where I's sync.

22
00:01:55,400 --> 00:01:56,560
See a sequel.

23
00:01:56,630 --> 00:02:07,170
But before I sync it here I can basically say that a product belongs to a user.

24
00:02:07,180 --> 00:02:13,530
Now you can learn way more about these relations in a sequel like documentation.

25
00:02:13,690 --> 00:02:21,430
There is a whole article about associations which kind of associations exist and how you define them

26
00:02:21,700 --> 00:02:27,820
equalize and which effect this has I will kill you some important implications in this model of course.

27
00:02:27,820 --> 00:02:36,770
So back to our code we are now setting up that for Sequel lies a product belongs to a user and this

28
00:02:36,770 --> 00:02:39,970
is now talking about a user created this product.

29
00:02:40,130 --> 00:02:43,900
We're not talking about purchases at this point.

30
00:02:44,060 --> 00:02:48,960
We can all consider this by passing a second argument which is optional here.

31
00:02:49,000 --> 00:02:54,740
It can define how this relationship be managed and very important we can find so-called constraints

32
00:02:55,310 --> 00:02:56,570
set them to true.

33
00:02:56,780 --> 00:02:59,370
And for example say that on the lead.

34
00:02:59,600 --> 00:03:06,080
So if a user is selected what should happen to any connected products and here we can say cascade which

35
00:03:06,080 --> 00:03:10,500
simply means well the deletion would then also be executed for the product.

36
00:03:10,580 --> 00:03:14,930
So if we delete the user any price related to user would also be gone.

37
00:03:14,930 --> 00:03:20,720
This is totally optional and you definitely need to learn a bit more about sequel to fully understand

38
00:03:20,720 --> 00:03:21,910
your options here.

39
00:03:21,920 --> 00:03:26,210
This is beyond the scope of this course but this can all be done with sequels.

40
00:03:26,300 --> 00:03:28,820
And now we got this relation's set up.

41
00:03:28,820 --> 00:03:36,320
You can also find the inverse and say that one user has many products because one user can of course

42
00:03:36,410 --> 00:03:38,930
add more than one product to the shop.

43
00:03:38,960 --> 00:03:40,150
Now this is optional.

44
00:03:40,190 --> 00:03:41,440
You don't need that.

45
00:03:41,480 --> 00:03:45,400
You can basically replace belongs to which I have many call.

46
00:03:45,530 --> 00:03:51,910
But here I also like to define both directions to really make it clear how this relation works.

47
00:03:52,790 --> 00:04:00,750
Now with this being set up sequel I sync will not just create tables for our models but also define

48
00:04:00,810 --> 00:04:05,180
their relations in our database as we define them here.

49
00:04:05,180 --> 00:04:11,390
The one problem we have right now is that we already create the products table and it therefore will

50
00:04:11,390 --> 00:04:19,130
not override it with the new information and we can ensure that it will by setting force to true.

51
00:04:19,130 --> 00:04:23,840
Of course a setting you wouldn't really use in production because you don't always want to overwrite

52
00:04:23,840 --> 00:04:25,240
your tables all the time.

53
00:04:25,340 --> 00:04:31,610
But here during development I want to reflect my new changes so we'll set this to true and therefore

54
00:04:31,610 --> 00:04:35,520
after restarting we indeed see a couple of statements were executed.

55
00:04:35,750 --> 00:04:43,420
First of all it dropped any existing tables and then created a new table users with all the set up.

56
00:04:43,580 --> 00:04:48,930
And then it also creates a new products table and besides adding all the fields there.

57
00:04:49,040 --> 00:04:56,990
It also defined that there is a new field the user id field which is an integer and which is a foreign

58
00:04:56,990 --> 00:05:04,300
key that references the ID field in the Users table and that on the lead it should cascade.

59
00:05:04,400 --> 00:05:06,470
And an update cascade is the default.

60
00:05:06,740 --> 00:05:13,810
So this is Mehta's set up in the database which seek license also added to connect our tables there

61
00:05:13,800 --> 00:05:14,670
too.

62
00:05:14,870 --> 00:05:21,200
And if we go to work bench and we right click on our database and set call refresh all we see there

63
00:05:21,200 --> 00:05:22,660
are two tables now.

64
00:05:23,090 --> 00:05:29,630
And indeed if we inspect products we see that our product is gone because it recreated the table.

65
00:05:29,660 --> 00:05:33,740
But now besides created add an update of that that were added by sequel's.

66
00:05:33,800 --> 00:05:39,120
There is a user ID field which was all added by sequel lies and this will automatically be populate

67
00:05:39,120 --> 00:05:40,370
by sequela too.

68
00:05:40,490 --> 00:05:44,090
Once we create products that are related to a user.

69
00:05:44,120 --> 00:05:50,360
So lets make sure that we have a user because right now data table is empty and that we then can connect

70
00:05:50,450 --> 00:05:52,370
users and products in our app.

