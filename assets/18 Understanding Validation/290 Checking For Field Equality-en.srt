1
00:00:02,280 --> 00:00:10,860
With our basic validation in place let's now find out how we can check for equality in our passwords.

2
00:00:11,190 --> 00:00:16,270
And for that I of course want to check my confirm password field.

3
00:00:16,290 --> 00:00:22,320
So in my sign up view I'm talking about this field with the name confirm password.

4
00:00:22,320 --> 00:00:29,310
So let's go back to off J.S. to that route and let's add and you check for something in the ball you

5
00:00:29,310 --> 00:00:30,350
have to request.

6
00:00:30,360 --> 00:00:39,010
So basically for to confirm password field here now in there I want to check if that is equal to my

7
00:00:39,010 --> 00:00:39,820
password.

8
00:00:39,820 --> 00:00:41,920
And how can I achieve this.

9
00:00:42,280 --> 00:00:48,670
Well I could do it by adding a custom validator here that custom validator which receives a value and

10
00:00:48,850 --> 00:00:50,230
then extract the request.

11
00:00:50,250 --> 00:00:52,690
Have this destructuring syntax.

12
00:00:52,690 --> 00:00:59,320
And if they're in there I check if the value of confirmed password is equal to the value of request

13
00:00:59,820 --> 00:01:01,680
for the password.

14
00:01:01,750 --> 00:01:05,160
And this is why you might need access to the request object.

15
00:01:05,230 --> 00:01:07,590
Because here I need to extract the password.

16
00:01:07,630 --> 00:01:14,440
So this field value from the request body in my custom validator and I can check if they are equal or

17
00:01:14,440 --> 00:01:19,290
to be precise if they are not equal and if they are not equal.

18
00:01:19,570 --> 00:01:28,110
Well then I want to throw a new era where I say passwords have to match like this.

19
00:01:28,240 --> 00:01:30,400
And otherwise I return true.

20
00:01:30,580 --> 00:01:33,550
And this is how we could check for equality of two fields.

21
00:01:33,630 --> 00:01:39,150
I'm checking whether my confirmed password is equal to my password was that if I was saved.

22
00:01:40,140 --> 00:01:46,620
And I do enter a valid email address this one is already taken but I'm not validating for this with

23
00:01:46,620 --> 00:01:47,130
this package.

24
00:01:47,130 --> 00:01:48,840
So this should be fine.

25
00:01:48,840 --> 00:01:53,050
I do enter a valid password and I do enter.

26
00:01:53,370 --> 00:01:58,620
Let's say a number theoretically valid password though we're not checking for langue for anything like

27
00:01:58,620 --> 00:01:58,940
that.

28
00:01:58,980 --> 00:02:01,690
Unconfirmed password so anything would do it there.

29
00:02:01,740 --> 00:02:05,100
But the important thing is this is a password that differs from this one.

30
00:02:05,160 --> 00:02:07,700
You can make this really clear by adding more characters.

31
00:02:07,770 --> 00:02:10,580
For now it's sign up I get passwords have to match.

32
00:02:10,590 --> 00:02:12,560
So this is now working.

33
00:02:12,630 --> 00:02:15,210
If on the other hand I try to take an e-mail address.

34
00:02:15,210 --> 00:02:17,480
But again that's not validated by this package.

35
00:02:17,550 --> 00:02:20,700
But then a try valid equal passwords.

36
00:02:20,700 --> 00:02:26,510
Then I only get my e-mail thing but the validation with that validation package succeeded.

37
00:02:26,520 --> 00:02:33,750
Now it's also worth noting that I did not add the our password validation like is length and is alphanumeric

38
00:02:33,750 --> 00:02:35,030
to the confirmed password.

39
00:02:35,160 --> 00:02:38,600
Even though that applies to the confirmed password too of course.

40
00:02:38,640 --> 00:02:40,400
But why did I not add it.

41
00:02:41,520 --> 00:02:44,310
Because we're already checking it on this main password.

42
00:02:44,430 --> 00:02:46,290
And then we're checking for equality.

43
00:02:46,440 --> 00:02:50,270
So we implicitly have this check here unconfirmed password too.

44
00:02:50,340 --> 00:02:56,190
I don't care if confirmed password is long enough because it has to equal that password and that password

45
00:02:56,400 --> 00:02:58,300
is checked for its length.

46
00:02:58,320 --> 00:03:05,430
So I got in place here and therefore I am protected against any errors on this site.

47
00:03:05,430 --> 00:03:12,810
So this is now how we could check for password or any field equality that you might need in your application.

