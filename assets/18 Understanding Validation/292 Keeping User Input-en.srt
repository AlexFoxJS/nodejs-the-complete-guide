1
00:00:02,300 --> 00:00:08,380
Knouted we learn a bit about how we can validate user input before handling it.

2
00:00:08,570 --> 00:00:13,760
Let's also work on the user experience side of things because right now when signing up for example

3
00:00:13,760 --> 00:00:19,490
let's say you enter an e-mail address and you enter a password but the passwords don't match or do e-mail

4
00:00:19,490 --> 00:00:20,700
is already taken.

5
00:00:20,720 --> 00:00:25,880
Then we give you that error message which is great but of course all the input is lost and that is a

6
00:00:25,880 --> 00:00:27,320
horrible user experience.

7
00:00:27,320 --> 00:00:33,680
So typically we want to keep the input we want to keep the data the user entered and that is exactly

8
00:00:33,680 --> 00:00:34,960
what I want to work on next.

9
00:00:34,970 --> 00:00:36,930
Keeping that data around.

10
00:00:37,040 --> 00:00:39,040
Now how can we do that.

11
00:00:39,080 --> 00:00:43,930
Well we're dead Let's go to these controller actions where we do handle sign up and sign in.

12
00:00:44,090 --> 00:00:52,900
And let's maybe start with signing users in there we do return this page when we enter incorrect data.

13
00:00:53,000 --> 00:00:56,300
And we sent that status quo error message.

14
00:00:56,300 --> 00:00:59,770
By the way we should of course also do that for logging in.

15
00:00:59,780 --> 00:01:05,400
Now that I see that I forgot debt status 422 should be adhered to.

16
00:01:05,630 --> 00:01:10,880
But in the end what matters here is that we render dead view and we include the error message.

17
00:01:10,940 --> 00:01:17,090
But of course to keep the data the user entered we should send this data back as well.

18
00:01:17,090 --> 00:01:25,620
So what we can do here is we can send maybe old input Kia whatever you want.

19
00:01:25,660 --> 00:01:31,540
And that could be an object and does object could keep it could hold to email and to password.

20
00:01:31,570 --> 00:01:36,880
So I have two key value pairs here where I essentially store the email and the password which I retrieved

21
00:01:36,880 --> 00:01:42,850
from the incoming request and I sent that back to the page we render when we render it.

22
00:01:43,330 --> 00:01:47,310
Due to this error so that I can render it on the page and output it there.

23
00:01:47,380 --> 00:01:55,970
Because what this allows me to do is I can now go to my Sign-Up page and by the way I should also output

24
00:01:55,970 --> 00:02:00,260
confirm passport which you can retrieve from request body.

25
00:02:00,500 --> 00:02:03,110
Confirm password here and the sign up route.

26
00:02:03,140 --> 00:02:06,220
So does a number of fields that we enter so we should return it.

27
00:02:06,500 --> 00:02:12,830
And now when we have the invalid input we get these values back in our view.

28
00:02:13,180 --> 00:02:19,430
And so now if I go to my Sign-Up E.J. s file we can basically output the data there.

29
00:02:19,430 --> 00:02:26,870
So for example for the e-mail input we can add the value attribute which HVM supports and we can output

30
00:02:26,900 --> 00:02:34,690
our data there so we can use as Ejaz syntax to pre populate this with some data and data here would

31
00:02:34,710 --> 00:02:36,160
be old input.

32
00:02:36,170 --> 00:02:42,180
Daut email if we do that we save everything and I reload the sign up page

33
00:02:45,000 --> 00:02:53,010
I get an error though and resisted when I was a disk for the first time from my get sign up action I

34
00:02:53,010 --> 00:02:54,600
don't rendered the old input.

35
00:02:54,720 --> 00:02:58,240
So here when I rendered the sign up page I don't have old input.

36
00:02:58,290 --> 00:03:00,980
So what I should do in their stead is dear.

37
00:03:01,230 --> 00:03:05,880
We can also pass our data out with email being equal to an empty string.

38
00:03:05,880 --> 00:03:16,780
The same for password and for confirm password so that I enter empty values for these fields when we

39
00:03:16,780 --> 00:03:24,470
get loaded for the first time and I enter the old input for the case that we have that validation error.

40
00:03:24,610 --> 00:03:30,480
And with that if I now reload Sign-Up this works and if I now do enter something here which is incorrect

41
00:03:30,490 --> 00:03:37,720
for some reason then you see that it's kept the old e-mail because we returned that with their response

42
00:03:38,080 --> 00:03:40,460
and we Denne output it in our view.

43
00:03:40,780 --> 00:03:46,170
And of course we should do the same for a password and confirm password so your password I output all

44
00:03:46,190 --> 00:03:50,080
input data password and four confirmed password.

45
00:03:50,080 --> 00:03:53,600
It is old and would not confirm password.

46
00:03:53,600 --> 00:04:02,520
So outputting that fruit Ejay as syntax and therefore Now when I enter something invalid again.

47
00:04:02,920 --> 00:04:09,250
Now we still get that error message but we kept our old data which is a much better user experience

48
00:04:09,250 --> 00:04:09,720
of course.

