1
00:00:02,200 --> 00:00:04,020
So we've worked in the user experience.

2
00:00:04,030 --> 00:00:08,800
Now that's all the work on the user experience of logging in because right now if a log in.

3
00:00:08,820 --> 00:00:15,820
Well I don't get any highlights here and if I do log in like this and my hazard has to be valid then

4
00:00:15,820 --> 00:00:17,230
my old data is lost.

5
00:00:17,230 --> 00:00:19,650
Now of course this is a great challenge for you.

6
00:00:19,660 --> 00:00:25,030
So if you're free to posti video and tribes on your own you have to basically do what we did before

7
00:00:25,600 --> 00:00:28,780
though there is a little extra twist which is all to show you of course.

8
00:00:28,780 --> 00:00:30,430
So here's your chance to pause to video.

9
00:00:30,430 --> 00:00:35,700
We'll do it together dear ofter very successful.

10
00:00:35,700 --> 00:00:39,930
Now let's try this together and we start in the off controller.

11
00:00:39,990 --> 00:00:48,660
But now in post log in of course because that is up there where we do Gabr validation results for the

12
00:00:48,660 --> 00:00:50,430
log in screen.

13
00:00:50,430 --> 00:00:56,520
Now if I render responds with this error code which you don't have to set as you saw but which is a

14
00:00:56,520 --> 00:01:01,210
good practice to set to be very clear about what went wrong.

15
00:01:01,320 --> 00:01:07,140
If you do all that then of course you can also pass some old input on this route here.

16
00:01:07,230 --> 00:01:12,940
So old input here would contain e-mail which we extract up here there.

17
00:01:13,170 --> 00:01:19,560
And of course the password which we extract and pass that in a key is named email and password.

18
00:01:19,560 --> 00:01:20,590
Back to you.

19
00:01:23,370 --> 00:01:31,810
You can also set your validation errors if you want and set that to errors array like this.

20
00:01:31,810 --> 00:01:38,230
Basically as we did it for the Sign-Up Rod there's just one difference.

21
00:01:38,240 --> 00:01:43,850
We also have some errors that stem from us entering invalid e-mail or password.

22
00:01:43,850 --> 00:01:49,730
So basically when we try to log a user in for which we don't have the database or word a password does

23
00:01:49,730 --> 00:01:50,720
not match.

24
00:01:51,070 --> 00:01:57,470
Now in such cases since I don't use my validation logic here and since I redirect to make sure that

25
00:01:57,500 --> 00:02:06,230
we treat this in a uniform way we should also return our rendering here because in the end we have an

26
00:02:06,230 --> 00:02:07,980
invalid input here as well.

27
00:02:09,890 --> 00:02:16,130
The error message then just is this error message and hence we don't need to flash it anymore so we

28
00:02:16,130 --> 00:02:22,480
can't get rid of that flashing the old input is definitely something you want to keep here as well.

29
00:02:22,730 --> 00:02:24,580
And validation errors.

30
00:02:24,920 --> 00:02:32,540
Well there we have to add some objects with param and that in this case it could be parent email and

31
00:02:32,540 --> 00:02:38,150
parent password if you want to make sure you don't show what exactly led to the error.

32
00:02:38,330 --> 00:02:42,920
But of course you could also just leave that out and kind of only give out that message.

33
00:02:42,920 --> 00:02:48,910
Keep the old values but don't mark any thing as a rat simply to not give away what exactly failed.

34
00:02:48,950 --> 00:02:50,140
If you wanted to do that.

35
00:02:50,360 --> 00:02:52,040
So here I'll just return the error message.

36
00:02:52,070 --> 00:02:53,200
And the old input.

37
00:02:53,480 --> 00:03:02,750
And now I will copy that again and down there where I also redirect with my error message.

38
00:03:02,750 --> 00:03:05,440
Well I basically do it in the same way as up here.

39
00:03:05,540 --> 00:03:12,050
And yes you could refactored this in some way but now with that if we save that we just have to work

40
00:03:12,050 --> 00:03:18,170
a little bit on the log in screen and on the logon screen we of course want to pre populate these fields

41
00:03:18,170 --> 00:03:19,950
with their old values again.

42
00:03:20,190 --> 00:03:26,000
We do this as you saw with the help of Ejay us by using old input email here

43
00:03:29,000 --> 00:03:35,060
and then the same for the password here old email password.

44
00:03:35,090 --> 00:03:38,660
So these two Ifill's setting the value attribute on these two inputs.

45
00:03:38,660 --> 00:03:43,390
That is what we need to do here to return these old or used as old data.

46
00:03:43,610 --> 00:03:47,360
And then the controller would just have to make sure that we set this old data.

47
00:03:47,480 --> 00:03:52,340
We also need to make sure that for the first time we load this with get log in.

48
00:03:52,340 --> 00:03:53,390
We also set

49
00:03:57,110 --> 00:03:59,830
the old input.

50
00:03:59,920 --> 00:04:09,180
In this case here to an object where the email is an empty string and the password is an empty string

51
00:04:10,740 --> 00:04:17,790
and all set validation errors here to an empty array so that we don't get an error regarding disk not

52
00:04:17,790 --> 00:04:22,290
being found when it's first rendered and now over reload this page.

53
00:04:22,500 --> 00:04:25,310
If I go to log in page again this works.

54
00:04:25,380 --> 00:04:31,710
And now if I try to log like this I get an error but the old data is kept.

55
00:04:31,710 --> 00:04:39,090
And now if I enter a valid password but one which is invalid then you see we all keep the old values.

56
00:04:39,090 --> 00:04:45,920
Now we can also add the red borders if we want to why reusing that code from an Sign-Up Ejay us there.

57
00:04:45,960 --> 00:04:51,780
I used that code for setting osseous as class and I do the same on the log in each class page.

58
00:04:51,780 --> 00:04:58,510
So there let me Sblood all these fields up and then at the class here.

59
00:04:58,530 --> 00:05:03,210
Look for email in this case and some on the e-mail input here.

60
00:05:04,820 --> 00:05:08,280
And of course let's do the same for the password down there.

61
00:05:08,450 --> 00:05:13,490
Let's split that at the Clauss and your password is actually correct already.

62
00:05:14,370 --> 00:05:20,640
So now if there is one last check if I do enter just invalid credentials in the sense of no user is

63
00:05:20,640 --> 00:05:23,600
found for this then nothing is marked as read.

64
00:05:23,760 --> 00:05:27,060
But if I enter something invalid like this where the password is too short.

65
00:05:27,180 --> 00:05:31,480
Well then I do give it at the red border and this is the setup I'm using here.

66
00:05:31,560 --> 00:05:34,150
Obviously you can add justice to your requirements.

