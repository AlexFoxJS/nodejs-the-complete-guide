1
00:00:02,310 --> 00:00:04,280
So let's work on handlebars now.

2
00:00:04,470 --> 00:00:06,320
For now without delay.

3
00:00:06,690 --> 00:00:13,530
So let's go to the ad product HTL page and copy that over into a ad product.

4
00:00:13,580 --> 00:00:16,330
HP says fall like this.

5
00:00:16,560 --> 00:00:19,630
Now this is now our ad product page.

6
00:00:19,640 --> 00:00:20,550
This is all looking good.

7
00:00:20,570 --> 00:00:25,700
Now let's output the page title dynamically and we're not using a layout for now I will show you how

8
00:00:25,760 --> 00:00:27,620
this would work in a second too.

9
00:00:27,830 --> 00:00:33,910
So let's add to Page Title Act of KLOS should here be on add product.

10
00:00:34,140 --> 00:00:39,600
No need to assign this conditionally because we're in the ad product H.B. as for any ways here does

11
00:00:39,640 --> 00:00:41,250
this not in the layout.

12
00:00:41,790 --> 00:00:43,880
And now let's all go down there.

13
00:00:43,900 --> 00:00:45,870
This should all of course still work.

14
00:00:45,870 --> 00:00:48,290
So this was pretty straightforward I guess.

15
00:00:48,330 --> 00:00:55,160
So if we now save this and click on Add product to work and this is now rendered by handlebars because

16
00:00:55,160 --> 00:00:57,440
that is our view engine.

17
00:00:57,830 --> 00:01:07,340
Now let's go to the shop team l fall and let's copy all that code here and add Shop on.

18
00:01:07,380 --> 00:01:11,340
HB as fall here at step code here.

19
00:01:11,720 --> 00:01:21,640
Title becomes shop or better dynamic the output page title and now the interesting part of course is

20
00:01:21,640 --> 00:01:26,150
here in the main section there we can comment in this code.

21
00:01:26,550 --> 00:01:31,060
So let's remove the comment tax here.

22
00:01:32,110 --> 00:01:37,230
And now I want to loop through all the articles and then of course also changed the image here does

23
00:01:37,230 --> 00:01:39,640
is still the old not working image.

24
00:01:39,640 --> 00:01:43,300
Let's take that new image link I added in the pocket template.

25
00:01:43,500 --> 00:01:49,710
Let's move that into your q like that.

26
00:01:51,090 --> 00:01:58,920
End with it added Let's now repeat this article for all the products we have and show no products found

27
00:01:58,920 --> 00:01:59,290
text.

28
00:01:59,280 --> 00:02:04,910
If we got no products for this we need to use a new handlebars next which you obviously don't know yet.

29
00:02:05,810 --> 00:02:10,070
Maybe you explored it in the official docs are wise let's edit together here.

30
00:02:10,920 --> 00:02:17,070
First of all there is and if helper you still add your double curly braces here.

31
00:02:17,430 --> 00:02:23,070
But then you add a hash tag for a special block statements block statements simply are statements which

32
00:02:23,100 --> 00:02:30,510
are not just outputting some text but which actually wraps some content that should be output conditionally

33
00:02:30,630 --> 00:02:32,230
or in a loop.

34
00:02:32,310 --> 00:02:37,640
Here we can that if keyword and check if Pre-OT's length is greater than zero.

35
00:02:37,650 --> 00:02:40,090
So it's the same condition as in the pack template.

36
00:02:40,090 --> 00:02:42,660
Justice syntax is a bit different.

37
00:02:42,690 --> 00:02:47,630
Now we want to output this article we're actually not the article the entire grid.

38
00:02:47,970 --> 00:02:52,200
So it's actually switched at the entire grid here.

39
00:02:52,290 --> 00:02:54,060
Let's indent this indentation here.

40
00:02:54,060 --> 00:02:56,730
Doesn't matter but makes it easier to read.

41
00:02:56,880 --> 00:02:58,130
Here we want to wrap this.

42
00:02:58,160 --> 00:03:04,240
And now we want to close that lock a dnt and we do that with a closing statement where we all have.

43
00:03:04,410 --> 00:03:09,390
If you're by the way if you're all asked to sit next to the hash tag.

44
00:03:09,630 --> 00:03:15,330
So this opens the if block with the condition then this content is only rendered if that condition is

45
00:03:15,330 --> 00:03:15,840
met.

46
00:03:15,940 --> 00:03:18,140
And then we close it.

47
00:03:18,160 --> 00:03:23,320
Now of course we all want to have an outside block so let's add this here to hash tag Altes extend the

48
00:03:23,320 --> 00:03:27,310
key and there we simply put the content we want output.

49
00:03:27,310 --> 00:03:34,880
If the condition is not met no products found with that let's save that and let's go back to the shop

50
00:03:35,600 --> 00:03:38,000
and we get an error.

51
00:03:38,420 --> 00:03:44,120
The problem we have here is that handle bars doesn't actually support statements like this.

52
00:03:44,210 --> 00:03:50,330
It just supports the output of key is that true or false.

53
00:03:50,330 --> 00:03:57,770
Now this means that we have to move that logic from the template into our node express code and pass

54
00:03:57,770 --> 00:04:00,710
the result of this check into the template.

55
00:04:00,830 --> 00:04:07,700
So we would go to shop genius and there we actually add a new key value pair we pass into the template

56
00:04:08,300 --> 00:04:10,110
has products maybe.

57
00:04:10,520 --> 00:04:15,750
And this simply holds a value which is the result of our check here products.

58
00:04:15,770 --> 00:04:20,900
So this product's array here length greater 0.

59
00:04:20,910 --> 00:04:24,120
So now we just pass this key and there which is true or false.

60
00:04:24,180 --> 00:04:30,900
The result of this check and this is a core difference to pack already besides that H team L thing here

61
00:04:30,900 --> 00:04:32,010
in handlebars.

62
00:04:32,070 --> 00:04:36,300
We can't run any logic in our handlebars template.

63
00:04:36,510 --> 00:04:43,950
We just can output single propertys single variables and their value and we can only use these if blocks

64
00:04:43,950 --> 00:04:44,500
too.

65
00:04:44,760 --> 00:04:52,130
So here I can now check if Hafs product is true because dessous now the data I pass into this template

66
00:04:52,380 --> 00:04:54,620
and this actually also has a positive side.

67
00:04:54,630 --> 00:05:01,650
It might sound very complex but it forces us to put all our logic into the node expressed code where

68
00:05:01,650 --> 00:05:07,950
our logic typically should live and keep our templates lean because if you put too much logic in your

69
00:05:07,950 --> 00:05:13,530
templates it can be hard to understand your code because you always have to check both your expressed

70
00:05:13,530 --> 00:05:15,300
code and your templates.

71
00:05:15,300 --> 00:05:19,250
Otherwise you know the template is really just about displaying stuff.

72
00:05:19,320 --> 00:05:22,010
The logic always happens in no would express.

73
00:05:22,020 --> 00:05:24,030
So these are two kinds of philosophies.

74
00:05:24,060 --> 00:05:30,030
It's up to you to choose your favorite But this is how Express handlebars or how or handlebars in general

75
00:05:30,150 --> 00:05:31,250
handles this.

76
00:05:31,620 --> 00:05:38,550
So now with this change we can reload this page and now we just have a problem with else here.

77
00:05:39,150 --> 00:05:42,700
But that is just that it's not hashtag.

78
00:05:42,890 --> 00:05:44,760
Just to else just the keyword.

79
00:05:44,780 --> 00:05:45,680
My mistake.

80
00:05:45,680 --> 00:05:46,760
Sniveler reload.

81
00:05:46,820 --> 00:05:48,370
We have no products found.

82
00:05:48,440 --> 00:05:52,570
And if I do add my first book here we do actually see that.

83
00:05:52,700 --> 00:05:57,530
However this of course is not the values we have in our products array.

84
00:05:57,560 --> 00:06:02,960
We have some hard coded data here because I still have to add a block where we loop through all products

85
00:06:03,470 --> 00:06:07,870
and this is done with each block statement with hash tag each.

86
00:06:07,880 --> 00:06:11,690
And then you pass in and array Pre-OT's in our case.

87
00:06:11,720 --> 00:06:20,070
So now Pre-OT's is passed into this loop and now in there this element is repeated for each element.

88
00:06:20,150 --> 00:06:23,010
And we also have to close as with slash each.

89
00:06:23,120 --> 00:06:25,540
After we're done repeating our code.

90
00:06:25,580 --> 00:06:30,520
So now this block of HTL the code is repeated for every product.

91
00:06:30,530 --> 00:06:36,040
The question now just is how can we access this product and here handlebars.

92
00:06:36,050 --> 00:06:37,670
Also gives There's only one way.

93
00:06:37,790 --> 00:06:44,490
It gives us this key word which refers to the element India array forward occurred iteration.

94
00:06:44,510 --> 00:06:48,460
So to each product so therefore we can output this title here.

95
00:06:48,470 --> 00:06:56,170
For example because this will always refer to one product and one product still is a javascript object

96
00:06:56,480 --> 00:07:01,620
as stored in the array here in the Edmon just fall an object with a title key.

97
00:07:01,940 --> 00:07:05,850
So now if we save this and we reload this page.

98
00:07:06,020 --> 00:07:10,250
Now we see first spoke here because this is the title we assigned.

99
00:07:10,310 --> 00:07:16,430
So this is now how handlebars works and it's really important that you understand this different philosophy

100
00:07:16,580 --> 00:07:22,220
of having less logic in the template more logic in the node expressed code.

101
00:07:22,250 --> 00:07:28,250
So you have to prepare everything there so that in the template you don't have to write any javascript

102
00:07:28,400 --> 00:07:30,030
expressions.

103
00:07:30,440 --> 00:07:31,350
Therefore does this.

104
00:07:31,350 --> 00:07:35,140
Now the project converted to handle bars.

105
00:07:35,330 --> 00:07:38,600
Except for one thing and that is of course the layout.

