1
00:00:02,490 --> 00:00:08,880
We added Mulder and as you can see Mulder is able to accept our incoming data extract the files and

2
00:00:08,880 --> 00:00:16,160
stored them for us and then store information about the file upload in his request file object here

3
00:00:16,230 --> 00:00:19,770
which we output which in the end contains this data.

4
00:00:19,770 --> 00:00:25,310
Now all we have to do is we have to ensure that our data gets stored correctly.

5
00:00:25,530 --> 00:00:29,530
And for that we specify the destination folder.

6
00:00:29,820 --> 00:00:31,100
But we can do more.

7
00:00:31,230 --> 00:00:38,910
We can set the storage keyer which gives us way more configuration options than just the d'Este option.

8
00:00:38,910 --> 00:00:47,610
Now for that to configure a storage here I will actually set up a new configuration object maybe up

9
00:00:47,610 --> 00:00:48,170
there.

10
00:00:48,920 --> 00:00:50,860
File storage name is up to you.

11
00:00:50,990 --> 00:00:51,970
It's a constant.

12
00:00:52,160 --> 00:00:56,540
And the value will be something I get from the mulcher package there.

13
00:00:56,630 --> 00:01:03,110
It's the disk storage function disk storage is in the end a storage engine which you can use with milter

14
00:01:03,320 --> 00:01:06,100
and there you can pass a javascript object to configure it.

15
00:01:06,320 --> 00:01:11,510
It takes two keys it takes a destination and it takes the file name.

16
00:01:11,510 --> 00:01:16,900
These are two functions which Mulder will do and call for an incoming file.

17
00:01:16,970 --> 00:01:21,750
And these functions then control how that follows handled regarding the place where you store it.

18
00:01:21,780 --> 00:01:29,330
And regarding the naming So destination day four is a function we can make the arrow function which

19
00:01:29,420 --> 00:01:35,210
will be called by Mulder which receives the request object to file object and a callback which you have

20
00:01:35,210 --> 00:01:38,200
to call once you're done setting up the destination.

21
00:01:38,210 --> 00:01:41,010
So this is all to interact with Mulder.

22
00:01:41,510 --> 00:01:50,010
So in there you can for example call the call back with Knol as the first argument.

23
00:01:50,040 --> 00:01:54,510
That would be an error message you Frot to inform haltered that something is wrong with the incoming

24
00:01:54,510 --> 00:01:56,380
file and it should not store it.

25
00:01:56,430 --> 00:02:01,860
But if that is null you tell Mulder that it's OK to store it and then the second argument is the place

26
00:02:01,860 --> 00:02:04,970
where you do want to store it like that images folder.

27
00:02:05,070 --> 00:02:07,970
Now file name also is a function.

28
00:02:07,980 --> 00:02:13,320
So it's also an arrow function where we all received the request object some data about the file and

29
00:02:13,320 --> 00:02:19,860
a callback which we have to call to let mulcher know how to name it and there we can also call this

30
00:02:19,980 --> 00:02:22,910
with NULL to still inform Mulder.

31
00:02:22,920 --> 00:02:24,980
OK we're fine story please.

32
00:02:25,020 --> 00:02:28,140
And then the second argument is the file name which we want to use.

33
00:02:28,140 --> 00:02:30,940
And here we could name it image.

34
00:02:31,110 --> 00:02:32,810
But of course that would be a bit boring.

35
00:02:33,120 --> 00:02:39,210
Instead we can extract file and then there is the original name object which holds the original file

36
00:02:39,210 --> 00:02:40,370
name.

37
00:02:40,380 --> 00:02:44,130
There also is a file name object which holds this random hash.

38
00:02:44,300 --> 00:02:50,260
And what we can do here is we can of course combined as we can for example say I want to ensure dead

39
00:02:50,340 --> 00:02:54,060
if we have two images with the same name they don't overwrite each other.

40
00:02:54,060 --> 00:02:57,970
So we'll use that file name which is auto generated by Mulder.

41
00:02:58,320 --> 00:03:04,330
And then I'll concatenate it maybe with a dash in between with the original name with dad.

42
00:03:04,350 --> 00:03:11,870
I also insured that it and with that extension and now I set my own name here by calling that callback.

43
00:03:11,880 --> 00:03:17,430
Now we just need to inform haltered that we want to use it as storage engine and we do this by setting

44
00:03:17,700 --> 00:03:22,430
this as a value for the storage key into multiple options.

45
00:03:22,440 --> 00:03:26,620
Now with that if I go back and I added my product again.

46
00:03:26,730 --> 00:03:29,120
So the same input boat and she's elected.

47
00:03:30,230 --> 00:03:36,970
You will see that in those images folder you have undefined boat Bianchini.

48
00:03:37,100 --> 00:03:39,020
Now it's simply undefined here.

49
00:03:39,140 --> 00:03:45,830
Instead of that random hash because since we did set our own filename with this function your multitude

50
00:03:45,830 --> 00:03:47,510
does not generate that hash.

51
00:03:47,660 --> 00:03:52,100
But all we can do for example is we can use the current date.

52
00:03:52,370 --> 00:03:58,550
So new data to ises string gives us a snapshot of the current date and that should also ensure uniqueness.

53
00:03:58,610 --> 00:04:03,460
If you need more you can use some third party package that does give you a really unique hash.

54
00:04:03,620 --> 00:04:08,720
But with this we're now storing files with the right extension and a unique name.

55
00:04:08,780 --> 00:04:13,700
And this gives us more power because now we can control the Poth and the filename.

56
00:04:13,790 --> 00:04:19,910
And of course we can also use that for even more because maybe we want to validate that we only support

57
00:04:19,940 --> 00:04:21,170
certain MIME types.

58
00:04:21,230 --> 00:04:25,300
Let's say P And she's and K-Pax but not gifts or PDA apps.

59
00:04:25,430 --> 00:04:26,990
Let's do that in the next lecture.

